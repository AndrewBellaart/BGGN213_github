---
title: "Class14"
format: pdf
---

# Section 1. Differential Expression Analysis

```{r}
#| message: false
#| warning: false
library(DESeq2)
```


```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)

countData = read.csv(countFile, row.names=1)
head(countData)
```

> Q. Complete the code below to remove the troublesome first column from countData

```{r}
# Note we need to remove the odd first $length col
countData <- as.matrix(countData[,-1])
head(countData)
```

> Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

Tip: What will rowSums() of countData return and how could you use it in this context?

How many genes do we have to start with?

```{r}
nrow(countData)
```

- Find the rowSums() this will be zero for any genes with no count data
- Find the zero sum genes
- Remove them before running DESeq

```{r}
# Filter count data where you have 0 read count across all samples.

to.rm.ind <- rowSums(countData) == 0

countData_new <- countData[!to.rm.ind,]
head(countData[!to.rm.ind,])

nrow(countData_new)

```

# Running DESeq2

```{r}
dds = DESeqDataSetFromMatrix(countData=countData_new,
                             colData=colData,
                             design=~condition)
dds <- DESeq(dds)
res <- results(dds)
summary(res)
```

# Side-note: QC with PCA

```{r}
pc <- prcomp(t(countData_new), scale=T)
summary(pc)
```

```{r}
plot(pc$x[,1], pc$x[,2])
```

# Volcano Plot

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```
 
 > Q. Improve this plot by completing the below code, which adds color and axis labels
 
```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```
 
> Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(countData_new), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(countData_new),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

# Section 2. Pathway Analysis

KEGG pathways

```{r}
#| message: false
library(gage)
library(gageData)
library(pathview)
```

The `gage()` function wants a "vector of importance." In our case, here it will be fold-change values with associated entrez gene names.

```{r}
foldchange <- res$log2FoldChange
names(foldchange) <- res$entrez
head(foldchange)
```

```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
# Get the results
keggres = gage(foldchange, gsets=kegg.sets.hs)
```

```{r}
head(keggres$less)
```

hsa04110 Cell Cycle

```{r}
pathview(gene.data=foldchange, pathway.id="hsa04110")
```

```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchange, pathway.id="hsa04110", kegg.native=FALSE)
```
![Cell cycle hsa04110](hsa04110.pathview.png)

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchange, pathway.id=keggresids, species="hsa")
```

> Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

# Section 3. Gene Ontology (GO)

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchange, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

# Section 4. Reactome Analysis

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

"Cell cycle, mitotic" has the most significant p-value. The significant pathways listed in our KEGG results are not the same. It predicted that the most significant p-value was for organelle fission. This could be different because KEGG separates its results into upregulated and downregulated.



![](R-HSA-2555396-2.png)

![](R-HSA-69278.png)